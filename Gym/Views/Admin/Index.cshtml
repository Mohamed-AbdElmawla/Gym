@model List<Gym.Models.CoachEnrollment>

<style>
    /* Custom status background colors */
    .status-accepted {
        background-color: #a7f3d0; /* Soft green */
        color: #155724; /* Dark green text */
        font-weight: bold; /* Bold text */
    }

    .status-rejected {
        background-color: #f7d7da; /* Soft red */
        color: #721c24; /* Dark red text */
        font-weight: bold; /* Bold text */
    }

    .status-pending {
        background-color: #f2f2f2; /* Light gray */
        color: #383d41; /* Dark gray text */
        font-weight: bold; /* Bold text */
    }

    /* Center align text within table cells */
    table th, table td {
        text-align: center;
    }

    /* Hover effect for table rows */
    tbody tr:hover {
        background-color: #f5f5f5; /* Light gray hover effect */
    }
</style>

@{
    ViewData["Title"] = "Coach Enrollments";
}

<h2>@ViewData["Title"]</h2>

<div class="row mb-3">
    <div class="col-md-4">
        <form asp-controller="Admin" asp-action="Index" method="get" id="filterForm">
            <div class="form-group">
                <label for="status">Status:</label>
                <select class="form-control" name="status">
                    <option value="">All</option>
                    <option value="Accepted">Accepted</option>
                    <option value="Rejected">Rejected</option>
                    <option value="Pending">Pending</option>
                </select>
            </div>
            <div class="form-group">
                <label for="startDate">Start Date:</label>
                <input type="date" class="form-control" name="startDate" value="@ViewBag.StartDate" />
            </div>
            <div class="form-group">
                <label for="endDate">End Date:</label>
                <input type="date" class="form-control" name="endDate" value="@ViewBag.EndDate" />
            </div>
            <button type="submit" class="btn btn-primary">Apply Filters</button>
        </form>
    </div>
</div>

@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Enrollment ID</th>
                    <th>User ID</th>
                    <th>Status</th>
                    <th>Date</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var enrollment in Model)
                {
                    <tr class="@GetStatusRowClass(enrollment.Status)">
                        <td>@enrollment.Id</td>
                        <td>@enrollment.UserId</td>
                        <td>
                            <span class="badge badge-pill @GetStatusClass(enrollment.Status)">@enrollment.Status.ToString()</span>
                        </td>
                        <td>@enrollment.Date.ToString("yyyy-MM-dd")</td>
                        <td>
                            <a class="btn btn-info" asp-action="ShowEnrollmentDetails" asp-controller="Admin" asp-route-enrollmentId="@enrollment.Id">
                                Show Details
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-controller="Admin" asp-route-page="@i">@i</a>
                </li>
            }
        </ul>
    </nav>
}
else
{
    <div class="alert alert-warning" role="alert">
        No coach enrollments found.
    </div>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
}

@functions {
    string GetStatusClass(Gym.Models.Status status)
    {
        switch (status)
        {
            case Gym.Models.Status.Accepted:
                return "status-accepted";
            case Gym.Models.Status.Rejected:
                return "status-rejected";
            case Gym.Models.Status.Pending:
                return "status-pending";
            default:
                return "";
        }
    }

    string GetStatusRowClass(Gym.Models.Status status)
    {
        switch (status)
        {
            case Gym.Models.Status.Accepted:
                return "status-accepted";
            case Gym.Models.Status.Rejected:
                return "status-rejected";
            case Gym.Models.Status.Pending:
                return "status-pending";
            default:
                return "";
        }
    }
}
