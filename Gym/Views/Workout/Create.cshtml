@model Gym.View_Models.CreatingTrainingPlaneViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Training Plan Entry Form</title>
    <style>
        /* Add some basic styling */
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        h2 {
            color: #333;
            text-align: center;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            font-weight: bold;
        }

        input[type="text"],
        input[type="number"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .card {
            margin-top: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .card-body {
            padding: 15px;
        }

        img {
            max-width: 100%;
            height: auto;
            display: block;
            margin-top: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .btn {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <form id="trainingPlanForm" asp-action="MangeRequests" method="post">
        <div class="container" style="height: 400px; overflow-y: auto;">
            <h2>Training Plan Entry Form</h2>

            <div class="d-flex justify-content-between">
                <a href="/Workout" class="btn btn-danger">Cancel</a>
                <button type="submit" class="btn btn-success">Save</button>
            </div>
            @if (TempData.Peek("ErrorMessage") != null)
            {
                <h1 style="color:red;">@TempData["ErrorMessage"]</h1>
            }
            <div class="form-group">
                <label for="planName">Plan Name:</label>
                <input type="text" id="PlanName" name="input.Name" value="@Model.Name" placeholder="Enter plan name">
            </div>

            <!-- Display existing exercise details if available -->
            @if (Model.Sets != null && Model.Sets.Any())
            {
                <h3>Existing Exercise Details:</h3>
                @for (var i = 0; i < Model.Sets.Count; i++)
                {
                    var exerciseSet = Model.Sets[i];
                    <div class="card">
                        <div class="card-body">
                            <input type="hidden" name="setIndex" value="@i">

                            <button type="submit" name="op" value="1">Delete</button>
                            <h4><a href="@Url.Action("ExerciseDetails", "Exercise", new { ExerciseId = exerciseSet.ExerciseId })">@exerciseSet.Exercise.Name</a></h4>
                            <img src="@exerciseSet.Exercise.ImageUrl" alt="@exerciseSet.Exercise.Name">
                            <ul class="sets-container">
                                @for (var j = 0; j < exerciseSet.Field.Count; j++)
                                {
                                    var set = exerciseSet.Field[j];
                                    <li class="set">
                                        <strong>Set @(j + 1):</strong>
                                        
                                        <input type="hidden" name="feildSetIndex" value="@j">
                                        <input type="hidden" name="setIndex" value="@i">
                                        <input type="number" class="set-input" name="input.Sets[@i].Field[@j].Weight" value="@set.Weight" min="0" step="0.5">
                                        <input type="number" class="set-input" name="input.Sets[@i].Field[@j].Reps" value="@set.Reps" min="0">
                                        <button type="submit" name="op" value="2">Delete</button>
                                    </li>
                                }
                            </ul>
                            <input type="hidden" name="setIndex" value="@i">
                            <button type="submit" name="op" value="3">Add Set</button>
                        </div>
                    </div>
                }
            }
            <button type="submit" name="op" value="4" class="btn btn-primary mt-4">Add Exercise</button>
        </div>
    </form>
</body>

</html>

